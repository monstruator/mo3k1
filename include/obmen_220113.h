/*
	*********	IP-адреса абонентов и номера портов   *********
	__________________________________________________________
	|	Прибор |  IP-адрес    |  Имя хоста		| Порт приема |
	|__________|______________|_________________|_____________|
	|	MO3	   |  194.1.1.6   |  node5_l1_MO3K	|	8208      |
	|__________|______________|_________________|_____________|
	|	MO3K   |  194.1.1.9   |  mo3_k			|	8208      |	
	|__________|______________|_________________|_____________|		


typedef struct
{
    unsigned    short    status1;   //состояние связи с источником
                                    //0 - отказ связи изделий 
                                    //    "Симфония-3.2" и 3Ц-30.0
                                    //1 - связь есть
    unsigned    short    status2;   //признаки достоверности информации(СлС1)

    //разряды 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0  status2
    //разряды  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19  "Симфония-3.2" 
    //                                             (i-ый разряд - beta_i)
    //13р=12р=0  status2 (beta6,7 "Симфония-3.2") работа изделия  
    //"Симфония-3.2" в основном режиме
    //13р=12р=1  status2 (beta6,7 "Симфония-3.2") работа изделия 
    //"Симфония-3.2" в навигационном режиме
    //11р status2 (beta8 "Симфония-3.2")- признак недостоверности величины Kg 
    //                                (1-недостоверность, 0-достоверность) 
    //10р status2 (beta9 "Симфония-3.2")-признак недостоверности величины PUg 
    //                                (1-недостоверность, 0-достоверность) 
    //9р status2 (beta10 "Симфония-3.2")-признак недoстоверн. вел-н psi,teta 
    //                                (1-недостоверность, 0-достоверность) 
    //8р status2 (beta11 "Симфония-3.2")-признак недостоверности величины V 
    //                                (1-недостоверность, 0-достоверность) 
    //7р status2 (beta12 "Симфония-3.2")-признак недостоверности величины H 
    //                                (1-недостоверность, 0-достоверность) 
    float    Kg;   //курс географический, рад (отсчитывается от северного 
                    //направления по час. стрелке диап. изменения 0-360 град)
//  float    PUg;  //путевой угол географический, рад (отсчитывается от сев.
                    //направления по час. стрелке диап. изменения 0-360 град)
    float     V;    //модуль горизонтальной составляющей вектора скорости 
                    //относительно грунта м/сек диап. изменения  0-50 узлов
    float    fi;   //ширина места географическая на ОЗЭ, рад
                    //диапазон изменения +-90 град (+ северная, - южная)
    float    la;   //долгота места географическая на ОЗЭ, рад
                    //диапазон изменения +-180 град (+ восточная, - западная)
    float    a;    //большая полуось эллипса ошибок, метр
                    //диапазон изменения 0-10 км
    float    b;    //малая  полуось эллипса ошибок, метр
                    //диапазон изменения 0-10 км
    float    tau;  //угол ориентации большой полуоси ошибок , рад 
                    //(отсчитывается от северного направления 
                    //по часовой стрелке диапазон изменения 0 - 180 град)
//параметры изменяются с частотой 1гц
//При работе изделия "Симфония-3.2" в навигационном режиме информация 
//изделием 3Ц-30.0 не используется и в передаваемых словах массива 
//(кроме Сл С1) разряды 4...19 имеют произвольные значения
//за положительное направление осей системы координат принимается направление 
//на север, восток и вниз соответственно
} simfonia41_t;
*/
typedef struct
{
    unsigned    short    status1;   //состояние связи с источником
                                    //0 - отказ связи изделий 
                                    //    "Симфония-3.2" и 3Ц-30.0
                                    //1 - связь есть
    unsigned    short    status2;   //признаки достоверности информации(СлС1)

    //разряды 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0  status2
    //разряды  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19  "Симфония-3.2" 
    //                                             (i-ый разряд - beta_i)
    //13р=12р=0  status2 (beta6,7 "Симфония-3.2") работа изделия  
    //"Симфония-3.2" в основном режиме
    //13р=12р=1  status2 (beta6,7 "Симфония-3.2") работа изделия 
    //"Симфония-3.2" в навигационном режиме
    //11р status2 (beta8 "Симфония-3.2")- признак недостоверности величины Kg 
    //                                (1-недостоверность, 0-достоверность) 
    //10р status2 (beta9 "Симфония-3.2")-признак недостоверности величины PUg 
    //                                (1-недостоверность, 0-достоверность) 
    //9р status2 (beta10 "Симфония-3.2")-признак недoстоверн. вел-н psi,teta 
    //                                (1-недостоверность, 0-достоверность) 
    //8р status2 (beta11 "Симфония-3.2")-признак недостоверности величины V 
    //                                (1-недостоверность, 0-достоверность) 
    //7р status2 (beta12 "Симфония-3.2")-признак недостоверности величины H 
    //                                (1-недостоверность, 0-достоверность) 
    double    Kg;   //курс географический, рад (отсчитывается от северного 
                    //направления по час. стрелке диап. изменения 0-360 град)
	double	PUg;  //путевой угол географический, рад (отсчитывается от сев.
                    //направления по час. стрелке диап. изменения 0-360 град)
					
	double 	bort;
	double  kil;
	
	
    double     V;    //модуль горизонтальной составляющей вектора скорости 
                    //относительно грунта м/сек диап. изменения  0-50 узлов
	double  glub;
    double    fi;   //ширина места географическая на ОЗЭ, рад
                    //диапазон изменения +-90 град (+ северная, - южная)
    double    la;   //долгота места географическая на ОЗЭ, рад
                    //диапазон изменения +-180 град (+ восточная, - западная)
    double    a;    //большая полуось эллипса ошибок, метр
                    //диапазон изменения 0-10 км
    double    b;    //малая  полуось эллипса ошибок, метр
                    //диапазон изменения 0-10 км
    double    tau;  //угол ориентации большой полуоси ошибок , рад 
                    //(отсчитывается от северного направления 
                    //по часовой стрелке диапазон изменения 0 - 180 град)
//параметры изменяются с частотой 1гц
//При работе изделия "Симфония-3.2" в навигационном режиме информация 
//изделием 3Ц-30.0 не используется и в передаваемых словах массива 
//(кроме Сл С1) разряды 4...19 имеют произвольные значения
//за положительное направление осей системы координат принимается направление 
//на север, восток и вниз соответственно
} simfonia41_t;
typedef struct	{

	unsigned short	cr_com;	//!!!!!!! порядковый номер последней команды, выданной из пр.MO3 в пр.MO3K  в боевом режиме
							//0-USHRT_MAX
	short			num_com;//!!!!номер последней выданной команды в боевом режиме
							//команда 1 - подготовка к сеансу связи
							//команда 2 - начало сеанса связи
							//команда 3 - завершение  сеанса связи

							//параметры команды 1	
	short			num_KS;	//номер канала связи 1 - нр-к1, 2 - пр-к2 
	short			Nkey_SHAKR;	// номер ключа ШАКР 
	short			Nans_PSP;	// Номер ансамбля ПСП 
	short			ZUNf;		// вид зунф (Закон управления несущей частотой)
	short			Nd_FRCH;	// Код диапазона ФРЧ
	short			N_FRCH;		//Код номера ФРЧ	
	float			P_ANT_1;	//азимут антенны (в момент начала сеанса), рад
	float			beta_1;		//угол места антенны (в момент начала сеанса), рад
	float			Fd_1;		//сдвиг частоты (в момент начала сеанса), Кгц 

	short			kod_Barker;	//признак работы с кодом Баркера (0-без кода,1-с кодом)
	float			P_ANT_2;	//азимут антенны (в момент начала сеанса+1cek), рад
	int				T_SS;		//время начала СС сек в формате СЕВ
								//(время первого включения КПИ после входа КА в круг связи)

								//положение антенны и сдвиг частоты на каждом такте
	float			P_ANT;		//азимут антенны, рад
	float			beta;		//угол места антенны, рад
	float			Fd;			//сдвиг частоты, Кгц 
	float			Vr;			//радиальная составляющая скорости ка, м/c 
	float			Ar;			//радиальная составляющая ускорения ка, м/c2

	float			D;			//наклонная дальность до КА   м 
								//обновляется с частотой 1гц с момента расчетного СС
	unsigned short    cr_SEANCE;//порядковый номер последнего полученного массива ДЦП
	unsigned short    Rejim_AS;	//режим автосопровождения 1-вкл/0-откл

}obmen_41_31_2t;



typedef struct	{

	unsigned short	cr_com;	//!!!!!!!!!!!!! порядковый номер последней команды, выданной из пр.MO3 в пр.MO3K в контрольном режиме 
							//0-USHRT_MAX
	short			num_com;	//!!!!!!!!!!  номер последней выданной команды  в контрольном режиме
							//команда 4 - установить антенну в указанное положение
							//команда 5 - установить указанные режимы работы
							//команда 6 - сдвиг доплера

							//параметры команды 4	
	float			q;		//угол установки антенны по азимуту рад
	float			alfa;	//угол установки антенны по крену рад
	float			beta;		//угол установки антенны по углу места рад
	unsigned short    Rejim_AS;	//режим автосопровождения 1-вкл/0-откл
	float			Fd;		//сдвиг Доплера -70 - +70 Кгц

							//параметры команды 5
	unsigned short	M1;		//Маска 1 команд на вкл/откл устройств  табл 3
	unsigned short	M2;		//Маска 2 команд на вкл/откл устройств  табл 4
	unsigned short	M3;		//Маска 3 команд на вкл/откл устройств  табл 5 
	unsigned short	M4;		//Маска 4 команд на вкл/откл устройств  табл 6


}obmen_42_31_2t;

typedef struct	{
	unsigned short prizn_vida_inf;
	obmen_42_31_2t from42;
	obmen_41_31_2t from41;
	obmen_AK_MN3_MO3K_t	fromAK;
}obmen_MO3_MO3K_t;




/*
	#######################################################
	#													  #
	#					Обмен  MO3K -> MO3 				  #
	#													  #
	#######################################################
*/

#define SUM_DCP_K1			1250	//max число  используемых слов в массиве ДЦП K1
#define SUM_DCP_K2			6250	//max число  используемых слов в массиве ДЦП K2

typedef struct	{

// !!!! ни Симфонии ни Чардаша !!!!!

	short			pr_GSS;			//признак готовности к сеансу связи 1-готов, 0-не готов
									//фактическое положение антенны 2гц во время всего сеанса связи
	float			P_FACT;			//азимут, рад
	float			beta_FACT;		//угол места, рад
	float			Fd_FACT;		//сдвиг частоты, Кгц 

								//признаки обратной связи 	2гц во время всего сеанса связи
	short			pr_AS;			// !!!!!  признак приемаа сигнала на последнем такте
									//(при работе в режиме НР_К1) 1- был прием, 0- нет
	short			pr_PD;			//!!!!!!  признак приема сигнала на последнем такте
									//(при работе в режиме ПР_К2) 1- был прием, 0- нет
									//данные, принятые в пр.MO3K с КА 
									//(данные передаются порциями, соответствующими одному 
									//30-ти секундному циклу передачи БАПИ

	short			sost_CC_K2;		//состояние сеанса связи по каналу К2 (0-7)		

	short			UR_sign_K1;		//уровень сигнала по каналу К1 (0-100) -табло сигнала К1
	short			UR_sign_K2;		//уровень сигнала по каналу К2 (0-100) -табло сигнала К2
	short			PrM_K1;			//наличие сигнала "ПрМ К1" (1-есть сигнал, 0- нет сигнала)
									//(табло Пр приема	К1)	
	short			PrM_K2;			//наличие сигнала "ПрМ К2" (1-есть сигнал, 0- нет сигнала)
									//(табло Пр приема	К2)	
	short			Pr_ZI_K1;		//наличие сигнала из УПОС в аппаратуру Глория
									//(1-есть сигнал, 0- нет сигнала)
									//(табло Пр.ЗИ	К1)	
	short			Pr_ZI_K2;		//наличие сигнала из ТПО в аппаратуру Глория
									//(1-есть сигнал, 0- нет сигнала)
									//(табло Пр.ЗИ	К2)	
	short			GL_priem;		//наличие сигнала "прием" на выходе Глории
									//(1-есть сигнал, 0- нет сигнала)
									//(табло Глория-прием)	
	short			GL_CP;			//	наличие сигнала "ср" на выходе Глории
									//(1-есть сигнал, 0- нет сигнала)
									//(табло Глория-ср)	
	short			pr_rejim_AS;	//признак автосопровождения 1-есть/0-нет



	unsigned short	cr_SEANCE;		//порядковый номер массива данных цикла передачи 
									//0-USHRT_MAX
	short			sum_DCP;		//количество принятых слов с массиве дцп
	unsigned int	DCP_K1[SUM_DCP_K1];	//массив дцп для нр-к1
	unsigned short	DCP_K2[SUM_DCP_K2];	//массив дцп для пр-к2
}obmen_31_41_2t;


typedef struct	{

							//фактическое положение антенны (передается на каждом такте)

	float			q;		//угол установки антенны по азимуту рад
	float			alfa;	//угол установки антенны по крену рад
	float			beta;	//угол установки антенны по углу места рад
	unsigned short	Mispr;	//Маска исправности аппаратуры пр 3.1

							//данные оперативного контроля аппаратуры пр 3.1
	float			sum_K1;		//прием сигнала сумм.K1(формат Е)
	float			D_K1;		//прием сигнала дельта K1(формат Е)
	float			priem_K2;	//прием сигнала K2	>0 - "прием",
								//					иначе - "" 
	float			CR;			//СР	>0 - "СР",

	short			USign;		//уровень сигнала прд, дб
	unsigned short	Ms1;		//Маска состояния 1 табл 7
	unsigned short	Ms2;		//Маска состояния 1 табл 8
	unsigned short	Ms3;		//Маска состояния 1 табл 9
	short			pr_rejim_AS;//признак автосопровождения 1-есть/0-нет

}obmen_31_42_2t;

typedef struct	{
	//simfonia41_t	simfonia41;		//навигационные данные обновляются 2гц
	unsigned short SIMF32[15];
	unsigned short CEB[6];
	obmen_31_41_2t to41;
	obmen_31_42_2t to42;
	obmen_AK_MO3K_MN3_t toAK;
}obmen_MO3K_MO3_t;

